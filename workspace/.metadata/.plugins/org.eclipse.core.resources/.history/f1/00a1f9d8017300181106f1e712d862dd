package si;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class SubsetWithSumDP {
	
	boolean isSumAvailable(int[] arr, int sum) {
		int[][] dp= new int[sum+1][arr.length+1];
		
		for (int size = 1; size <= dp.length; size++ ) {
			for (int itemNum = 1; itemNum <= (arr.length+1); itemNum++ ) {
				if 
			}
		}
		return dp[bagSize][itemCount]; 
	}
	
	public static void main(String[] args) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter output = new BufferedWriter(new OutputStreamWriter(System.out));
		int testCaseCount = Integer.parseInt(br.readLine());

		while (testCaseCount > 0) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			int arrCount = Integer.parseInt(st.nextToken());
			int sum = Integer.parseInt(st.nextToken());
			int[] arr = new int[arrCount+1];
			int i = 1;
			st = new StringTokenizer(br.readLine());
			while (i <= arrCount) {
				arr[i] = Integer.parseInt(st.nextToken());
			}
			
			output.write(count(str, strLen) + "\n");
			testCaseCount--;
		}
		output.flush();
	}
}
